{"contributors":[{"path":"https://github.com/loleg/","role":"author","title":"loleg"}],"created":"2022-11-07T10:48","description":"Event and project details collected with dribdat","homepage":"https://dinacon.ch","keywords":["dribdat","hackathon","co-creation"],"licenses":[{"name":"ODC-PDDL-1.0","path":"http://opendatacommons.org/licenses/pddl/","title":"Open Data Commons Public Domain Dedication & License 1.0"}],"name":"event-7","resources":[{"data":[{"boilerplate":"### &#128640; Let's launch this thing!\r\n\r\nPosting a **Challenge**? The goal of the HACKnight to get people to [contribute to open source](https://dinacon.ch/hacknight/) - by contributing to projects like yours! To share your existing Open Source or Open Data or Open ... project as a challenge for the event, input the source code repository URL ([GitHub](http://github.com), [GitLab](http://gitlab.com), [Bitbucket](http://bitbucket.com)) and click \"Update\". Or just fill out the form below. \r\n\r\nNote that all project documentation created or shared during the event for projects published as above will be republished and promoted under a Creative Commons 4.0 Attribution license. Send any questions or requests to the [<i class=\"fa fa-envelope-o\" aria-hidden=\"true\"></i> hacknight team](mailto:hacknight@dinacon.ch)\r\n\r\nWe suggest this template for the **Description**:\r\n\r\n```\r\n(short introduction ...)\r\n\r\n---\r\n\r\n#### <center>{ hacknight challenges }</center>\r\n\r\n<span title=\"Beginner challenge\" class=\"challenge-badge level-1\"/>\r\n\r\n(a quick challenge for someone to take their first steps as a user...)\r\n\r\n<span title=\"Intermediate challenge\" class=\"challenge-badge level-2\"/>\r\n\r\n(something that one could do once familiar with the project...)\r\n\r\n<span title=\"Pro challenge\" class=\"challenge-badge level-3\"/>\r\n\r\n(a challenge for the coders and pro users in the room...)\r\n```","certificate_path":"","community_embed":"<div class=\"codeofconduct\">All attendees, sponsors, partners, volunteers and staff at our hackathon are required to agree with the <a href=\"https://hackcodeofconduct.org/\" target=\"_blank\">Hack Code of Conduct</a>. Organisers will enforce this code throughout the event. We expect cooperation from all participants to ensure a safe environment for everybody.</div>\r\n\r\n<br><p><a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\" target=\"_blank\"><img align=\"left\" style=\"margin-right:1em\" alt=\"Creative Commons Licence\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by/4.0/88x31.png\" /></a>The contents of this website, unless otherwise stated, are licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\" target=\"_blank\">Creative Commons Attribution 4.0 International License</a>.</p>\r\n","community_url":"https://team.opendata.ch/signup_user_complete/?id=itniqb33kfrdj8i8phqxh5ence","custom_css":".section-header .section-header-content h4 { display:none; }\r\n.section-header .section-header-content h3 { padding-top: 0.8em; }\r\n.project .hexagontent { overflow: visible; }\r\n.embed-view .honeycomb { width: 103%; }\r\n.challenge-badge { clear: both; float:none; }\r\n\r\n.translate { position: absolute; top: 5px; right: 5px; }\r\n.jumbotron img { max-width: 100%; }","description":"#### The **DINAcon HACKnight** is about contributing to **open projects** in a fun, hands-on way, for people of all levels of technical skill. Inspired by hackathons and hackergartens, we especially encourage you to bring issues and questions about any of the projects [shortlisted](https://awards.dinacon.ch/bewerbungen-2021/) or otherwise presented at [DINAcon 2021](https://dinacon.ch/programm-2021/). _All proposals to start or improve or support open source projects are welcome._\r\n\r\nThe challenges posted here will be announced at the event start at 18:00. Experienced developers will be available on hand to guide you through your first bug report or code commit! In our online and offline event, \u2615 refreshments and \ud83e\udd16 motivation will be provided. Projects that demonstrate dedication and potential to their hacks may be offered additional time, room, crowdsourcing and other support to continue by the DINAcon community. Projects may be posted and remote submissions are welcome until 18:00 the next day. If you have feedback or suggestions, please use the community forum on this page, or raise an [issue on GitHub](https://github.com/dinacon/hacknight/issues). There you can also find some goodies, like the official wallpaper. See you at the HACKnight!\r\n\r\n<a href=\"https://team.opendata.ch/signup_user_complete/?id=itniqb33kfrdj8i8phqxh5ence\"><img src=\"https://i.imgur.com/NwYtZGe.png\" height=\"80\">Chat with us here</a> or write an [e-mail](mailto:hacknight@dinacon.ch) if you have any questions.\r\n\r\n<img width=\"100%\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c6/Basel_bei_Nacht_01.jpg/800px-Basel_bei_Nacht_01.jpg\">\r\n<br><small>Credit: <a href=\"https://commons.wikimedia.org/wiki/File:Basel_bei_Nacht_01.jpg\">luca-bs</a> CC BY-SA 3.0</small>","ends_at":"2021-10-30T18:00","gallery_url":"","has_finished":true,"has_started":false,"hashtags":"","hostname":"","id":7,"instruction":"","location":"Basel","logo_url":"https://dinacon.ch/wp-content/uploads/sites/4/2017/06/DINAcon_Logo_web-1.png","name":"HACKnight 2021","starts_at":"2021-10-29T18:00","summary":"","webpage_url":"https://dinacon.ch"}],"name":"events"},{"data":[{"autotext":"CSV-to-WikiData\r\n===============\r\n\r\n## Installation and usage\r\n\r\nInstall all needed dependencies using `pip`:\r\n\r\n    pip install -r requirements.txt\r\n\r\nAfter the installation you can run the script:\r\n\r\n    python csvtowikidata.py\r\n\r\n## Development\r\n\r\nIt is recommended to install the `flake8` pre-commit-hook:\r\n\r\n    flake8 --install-hook\r\n\r\n## Affected items on WikiData\r\n    * [Altstadt Grossbasel](http://www.wikidata.org/wiki/Q445565)\r\n    * [Vorst\u00e4dte](http://www.wikidata.org/wiki/Q809915) \r\n    * [Am Ring](http://www.wikidata.org/wiki/Q809899)\r\n    * [Breite](http://www.wikidata.org/wiki/Q809901)\r\n    * [St. Alban](http://www.wikidata.org/wiki/Q809913)\r\n    * [Gundeldingen](http://www.wikidata.org/wiki/Q809905) \r\n    * [Bruderholz](http://www.wikidata.org/wiki/Q809902)\r\n    * [Bachletten](http://www.wikidata.org/wiki/Q809900) \r\n    * [Gotthelf](http://www.wikidata.org/wiki/Q809903)\r\n    * [Iselin](http://www.wikidata.org/wiki/Q809907) \r\n    * [St. Johann](http://www.wikidata.org/wiki/Q809912)\r\n    * [Altstadt Kleinbasel](http://www.wikidata.org/wiki/Q445588)\r\n    * [Clara](http://www.wikidata.org/wiki/Q809904)\r\n    * [Wettstein](http://www.wikidata.org/wiki/Q809916)\r\n    * [Hirzbrunnen](http://www.wikidata.org/wiki/Q664993)\r\n    * [Rosental](http://www.wikidata.org/wiki/Q809914)\r\n    * [Matth\u00e4us](http://www.wikidata.org/wiki/Q809911)\r\n    * [Klybeck](http://www.wikidata.org/wiki/Q809909)\r\n    * [Kleinh\u00fcningen](http://www.wikidata.org/wiki/Q809908)\r\n    * [Riehen](http://www.wikidata.org/wiki/Q5262)\r\n    * [Bettingen](http://www.wikidata.org/wiki/Q67530)\r\n    * [Basel](http://www.wikidata.org/wiki/Q78)\r\n    * [Basel-Stadt](http://www.wikidata.org/wiki/Q12172)\r\n","autotext_url":"https://github.com/opendatabs/csvtowikidata","contact_url":"https://twitter.com/@jonasbieri","created_at":"2021-10-29T05:23","download_url":"https://github.com/opendatabs/csvtowikidata/releases","event_name":"HACKnight 2021","event_url":"https://hacknight.dinacon.ch/event/7","excerpt":"WIkidata is an open database of facts describing the world. These facts are easily reused in Wikipedia articles. The challenge is to add official open data that is available as CSV on the web to Wikidata. We have a working setup for population data of neighbourhoods in Basel-Stadt, see the Github repo below and [StataBS/quartierindex](https://github.com/StataBS/quartierindex) for an example app. There are many other open datasets that could and should be reshaped and uploaded to Wikidata. \r\n\r\n--...","hashtag":"","id":46,"image_url":"https://www.wikidata.org/static/images/project-logos/wikidatawiki.png","is_challenge":false,"logo_color":"","logo_icon":"","longtext":"WIkidata is an open database of facts describing the world. These facts are easily reused in Wikipedia articles. The challenge is to add official open data that is available as CSV on the web to Wikidata. We have a working setup for population data of neighbourhoods in Basel-Stadt, see the Github repo below and [StataBS/quartierindex](https://github.com/StataBS/quartierindex) for an example app. There are many other open datasets that could and should be reshaped and uploaded to Wikidata. \r\n\r\n---\r\n\r\n#### <center>{ hacknight challenges }</center>\r\n\r\n<span title=\"Beginner challenge\" class=\"challenge-badge level-1\"/>\r\n\r\nGet [introduced](https://commons.wikimedia.org/wiki/File:A_Gentle_Introduction_to_Wikidata_for_Absolute_Beginners_(including_non-techies!).webm) to Wikidata if you're not aware of it already. Try the [Query service](https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/Wikidata_Query_Help), for instance with some of the [Cities examples](https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples#Cities).\r\n\r\n<span title=\"Intermediate challenge\" class=\"challenge-badge level-2\"/>\r\n\r\nVisit https://www.opendata.bs.ch/ to dig into the Open Data portal of Basel and extract some details on neighbourhoods and the population. Take a look at some of their [example apps](https://www.opendata.bs.ch/anwendungen.html).\r\n\r\n<span title=\"Pro challenge\" class=\"challenge-badge level-3\"/>\r\n\r\nOnce you have chosen the data to import, work on defining the structure of the data in such a way that a [Data import](https://www.wikidata.org/wiki/Wikidata:Data_Import_Guide) process could happen. Do a test run using [csvtowikidata](https://github.com/opendatabs/csvtowikidata).","maintainer":"jonasbieri","name":"Basel on Wikidata","phase":"Verify","progress":20,"score":45,"source_url":"https://github.com/opendatabs/csvtowikidata","summary":"Update Wikidata (and with that also Wikipedia!) with current official data","team":"","updated_at":"2021-10-29T22:29","url":"https://hacknight.dinacon.ch/project/46","webpage_url":""},{"autotext":"# OpenVSCode Server\r\n\r\n[![Gitpod ready-to-code](https://img.shields.io/badge/Gitpod-ready--to--code-908a85?logo=gitpod)](https://gitpod.io/from-referrer)\r\n[![GitHub](https://img.shields.io/github/license/gitpod-io/openvscode-server)](https://github.com/gitpod-io/openvscode-server/blob/main/LICENSE.txt)\r\n[![Discord](https://img.shields.io/discord/816244985187008514)](https://www.gitpod.io/chat)\r\n\r\n## What is this?\r\n\r\nThis project provides a version of VS Code that runs a server on a remote machine and allows access through a modern web browser. It's based on the very same architecture used by [Gitpod](https://www.gitpod.io) or [GitHub Codespaces](https://github.com) at scale.\r\n\r\n<img width=\"1624\" alt=\"Screenshot 2021-09-02 at 08 39 26\" src=\"https://user-images.githubusercontent.com/372735/131794918-d6602646-4d67-435b-88fe-620a3cc0a3aa.png\">\r\n\r\n## Why?\r\n\r\nVS Code has traditionally been a desktop IDE built with web technologies. A few years back, people started patching it in order to run it in a remote context and to make it accessible through web browsers. These efforts have been complex and error prone, because many changes had to be made across the large code base of VS Code.\r\n\r\nLuckily, in 2019 the VS Code team started to refactor its architecture to support a browser-based working mode. While this architecture has been adopted by Gitpod and GitHub, the important bits have not been open-sourced, until now. As a result, many people in the community still use the old, hard to maintain and error-prone approach.\r\n\r\nAt Gitpod, we've been asked a lot about how we do it. So we thought we might as well share the minimal set of changes needed so people can rely on the latest version of VS Code, have a straightforward upgrade path and low maintenance effort.\r\n\r\n## Getting started\r\n\r\n### Docker\r\n\r\n- Start the server:\r\n```bash\r\ndocker run -it --init -p 3000:3000 -v \"$(pwd):/home/workspace:cached\" gitpod/openvscode-server\r\n```\r\n- Visit [localhost:3000](http://localhost:3000).\r\n\r\n_Note_: Feel free to use the `nightly` tag to test the latest version, i.e. `gitpod/openvscode-server:nightly`.\r\n\r\n#### Custom Environment\r\n- If you want to add dependencies to this Docker image, here is a template to help:\r\n\t```Dockerfile\r\n\r\n\tFROM gitpod/openvscode-server:latest\r\n\r\n\tUSER root # to get permissions to install packages and such\r\n\tRUN # the installation process for software needed\r\n\tUSER openvscode-server # to restore permissions for the web interface\r\n\r\n\t```\r\n- For additional possibilities, please consult the `Dockerfile` for OpenVSCode Server at https://github.com/gitpod-io/openvscode-releases/\r\n\r\n### Linux\r\n\r\n- [Download the latest release](https://github.com/gitpod-io/openvscode-server/releases/latest)\r\n- Untar and run the server:\r\n```bash\r\ntar -xzf openvscode-server-v${OPENVSCODE_SERVER_VERSION}.tar.gz\r\ncd openvscode-server-v${OPENVSCODE_SERVER_VERSION}\r\n./server.sh\r\n```\r\n- Visit [localhost:3000](http://localhost:3000).\r\n\r\n_Note_: You can use [pre-releases](https://github.com/gitpod-io/openvscode-server/releases) to test nightly changes.\r\n\r\n### Deployment guides\r\n\r\nPlease refer to [Guides](https://github.com/gitpod-io/openvscode-server/tree/docs/guides) to learn how to deploy OpenVSCode Server to your cloud provider of choice.\r\n\r\n## The scope of this project\r\n\r\nThis project only adds minimal bits required to run VS Code in a server scenario. We have no intention of changing VS Code in any way or to add additional features to VS Code itself. Please report feature requests, bug fixes, etc. in the upstream repository.\r\n\r\n> **For any feature requests, bug reports, or contributions that are not specific to running VS Code in a server context, please go to [Visual Studio Code - Open Source \"OSS\"](https://github.com/microsoft/vscode)**\r\n\r\n## Documentation\r\n\r\nAll documentation is available in [the `docs` branch](https://github.com/gitpod-io/openvscode-server/tree/docs) of this project.\r\n\r\n## Supporters\r\n\r\nThe project is supported by companies such as [GitLab](https://gitlab.com/), [VMware](https://www.vmware.com/), [Uber](https://www.uber.com/), [SAP](https://www.sap.com/), [Sourcegraph](https://sourcegraph.com/), [RStudio](https://www.rstudio.com/), [SUSE](https://rancher.com/), [Tabnine](https://www.tabnine.com/), [Render](https://render.com/) and [TypeFox](https://www.typefox.io/).\r\n\r\n## Contributing\r\n\r\nThanks for your interest in contributing to the project \ud83d\ude4f. You can start a development environment with the following button:\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer)\r\n\r\nTo learn about the code structure and other topics related to contributing, please refer to the [development docs](https://github.com/gitpod-io/openvscode-server/blob/docs/development.md).\r\n\r\n## Community & Feedback\r\n\r\nTo learn what others are up to and to provide feedback, please head over to the [Discussions](https://github.com/gitpod-io/openvscode-server/discussions).\r\n\r\nYou can also follow us on Twitter [@gitpod](https://twitter.com/gitpod) or come [chat with us](https://www.gitpod.io/chat).\r\n\r\n## Legal\r\nThis project is not affiliated with Microsoft Corporation.\r\n","autotext_url":"https://github.com/gitpod-io/openvscode-server/","contact_url":"https://github.com/gitpod-io/openvscode-server/issues","created_at":"2021-10-29T21:28","download_url":"https://github.com/gitpod-io/openvscode-server/releases","event_name":"HACKnight 2021","event_url":"https://hacknight.dinacon.ch/event/7","excerpt":"The DINAcon Awards presentation was developed entirely using [Gitpod](https://www.gitpod.io/), which enables developers (or any users) to spin up fresh, automated dev environments quickly. At the HACKnight, we dig into a range of related questions, from the Kanban project boards used by agile open source teams (see \"[The Toyota Way](https://en.wikipedia.org/wiki/The_Toyota_Way)\"), to estimating project costs using forecasting models (see [Open Hub](https://www.openhub.net/p/jubula)).\r\n\r\n---\r\n\r\n#...","hashtag":"","id":52,"image_url":"https://avatars.githubusercontent.com/u/37021919?v=4","is_challenge":false,"logo_color":"","logo_icon":"","longtext":"The DINAcon Awards presentation was developed entirely using [Gitpod](https://www.gitpod.io/), which enables developers (or any users) to spin up fresh, automated dev environments quickly. At the HACKnight, we dig into a range of related questions, from the Kanban project boards used by agile open source teams (see \"[The Toyota Way](https://en.wikipedia.org/wiki/The_Toyota_Way)\"), to estimating project costs using forecasting models (see [Open Hub](https://www.openhub.net/p/jubula)).\r\n\r\n---\r\n\r\n#### <center>{ hacknight challenges }</center>\r\n\r\n<span title=\"Beginner challenge\" class=\"challenge-badge level-1\"/>\r\n\r\nCreate an account and fire up a Gitpod by clicking on a sample project, like the one we used for the [DINAcon Awards](https://gitpod.io/#https://github.com/dinacon/awards). Try a more sophisticated set up, with a build process like the one around [docToolchain](https://github.com/docToolchain/docToolchain). \r\n\r\n<span title=\"Intermediate challenge\" class=\"challenge-badge level-2\"/>\r\n\r\nDefine a [gitpod.yml file](https://www.gitpod.io/docs/config-gitpod-file/) for one of your own projects, or an open source project you would like to use with Gitpod.\r\n\r\n<span title=\"Pro challenge\" class=\"challenge-badge level-3\"/>\r\n\r\nRead the [OpenVSCode announcement](https://www.gitpod.io/blog/openvscode-server-launch) and deploy a local or self-hosted instance. Learn about the [contribution process](https://github.com/gitpod-io/gitpod/issues/5618) of the Gitpod project.","maintainer":"loleg","name":"openvscode-server","phase":"Find","progress":5,"score":36,"source_url":"https://github.com/gitpod-io/openvscode-server","summary":"Run upstream VS Code on a remote machine from any device, anywhere.","team":"","updated_at":"2021-10-29T21:33","url":"https://hacknight.dinacon.ch/project/52","webpage_url":"https://www.gitpod.io/"},{"autotext":"# FairElection\r\n\r\nFairElection creates a tool for political organisations, civil society organisations and companies to select candidates according to their self-chosen criteria of diversity/representation. In addition, everyone can use the tool to simulate the results of the latest National Council elections (2019) by modifying these same diversity criteria.\r\n\r\nThe FairElection tool supports political parties, civil society organisations and companies by monitoring internal selection processes and drawing up lists of candidates. The method works in two steps. First, members, supporters and/or the general public can choose their criteria for representation. What criteria will such a list have to meet? Gender parity, representation of the generations, place of residence, level of education? A first vote is organised to choose these representation criteria.\r\n\r\nSecondly, these chosen criteria are applied during an internal selection process. In a second vote, voters choose their favourite candidates. The freedom of choice of voters is not limited. They themselves do not have to create the perfect list that meets the criteria. It is the FairElection algorithm that ensures that the criteria chosen in the first vote are applied to the election result. The group of winning candidates will therefore be the one that satisfies the chosen criteria while respecting the democratic choice of the members.\r\n\r\nThis way, the winning group of candidates will be satisfying the criteria chosen by the user, while respecting the democratic choice of members. The algorithm provides a mathematical guarantee that the winning group is the one that obtains the most votes while respecting the criteria.\r\n\r\nThe platform FairElection is available here : https://fairelection.ch\r\n\r\n## Solver\r\n\r\nThis part of FairElection is responsible to solve \"mathematically\" the linear equation. It takes as input the different criteria set by the user and gives the best solution.\r\n\r\n## Backend\r\n\r\nThis part of FairElection is responsible for business logic. It manages the user profiles, the election instances, the citeria and the business flow.\r\n\r\n## Client\r\n\r\nThis part of FairElection is responsible to display the user interface.\r\n\r\n## Setup\r\n\r\nTo get it working, follow these steps:\r\n\r\n[Backend setup](./backend/README.md)\r\n\r\n[Client setup](./client/README.md)\r\n\r\n## Open Source\r\n\r\nFairElection is open source!\r\n","autotext_url":"https://github.com/tokiwi/fairelection","contact_url":"https://github.com/tokiwi/fairelection/issues","created_at":"2021-10-29T14:50","download_url":"https://github.com/tokiwi/fairelection/releases","event_name":"HACKnight 2021","event_url":"https://hacknight.dinacon.ch/event/7","excerpt":"Winner of the DINAcon 2021 Open Community award. Member of the [Prototype Fund](https://prototypefund.opendata.ch/project/fair-election/).\r\n\r\n\r\n\r\n---\r\n\r\n#### <center>{ hacknight challenges }</center>\r\n\r\n<span title=\"Beginner challenge\" class=\"challenge-badge level-1\"/>\r\n\r\nTry the online tool for political simulation, which uses existing data from past federal elections and get a feel for the platform.\r\nCreate a user account and go through the process to define your first vote monitoring. \r\n\r\n<sp...","hashtag":"","id":50,"image_url":"https://avatars.githubusercontent.com/u/79444591?v=4","is_challenge":false,"logo_color":"","logo_icon":"","longtext":"Winner of the DINAcon 2021 Open Community award. Member of the [Prototype Fund](https://prototypefund.opendata.ch/project/fair-election/).\r\n\r\n\r\n\r\n---\r\n\r\n#### <center>{ hacknight challenges }</center>\r\n\r\n<span title=\"Beginner challenge\" class=\"challenge-badge level-1\"/>\r\n\r\nTry the online tool for political simulation, which uses existing data from past federal elections and get a feel for the platform.\r\nCreate a user account and go through the process to define your first vote monitoring. \r\n\r\n<span title=\"Intermediate challenge\" class=\"challenge-badge level-2\"/>\r\n\r\nTry uploading candidates with the spreadsheet template. File any bugs or improvement ideas you find in the issue tracker (Contact button below).\r\n\r\n<span title=\"Pro challenge\" class=\"challenge-badge level-3\"/>\r\n\r\nDeploy the code locally. Do some security profiling or pentesting. Report the results to the team.","name":"fairelection \ud83c\udfc6","phase":"Get","progress":10,"score":35,"source_url":"https://github.com/tokiwi/fairelection","summary":"Tools for political simulation and stimulation","team":"","updated_at":"2022-11-07T09:40","url":"https://hacknight.dinacon.ch/project/50","webpage_url":""},{"autotext":"# LeepMotionProcessing\r\n\r\ndependency -> leepmotion sdk 2.3.1 \r\n\r\nsimple inmplementation of the LM Library by nok\r\nhttps://github.com/nok/leap-motion-processing\r\n\r\ngrab and move around a textured sphere\r\nswipe to spin\r\n\r\npress 'r' to reset spinning \r\npress 'b' to toggle background\r\n","autotext_url":"https://github.com/hajdebliem/LM_DINAcon","contact_url":"https://github.com/hajdebliem/LM_DINAcon/issues","created_at":"2021-10-29T22:02","download_url":"https://github.com/hajdebliem/LM_DINAcon/releases","event_name":"HACKnight 2021","event_url":"https://hacknight.dinacon.ch/event/7","excerpt":"We are much impressed by the visuals of [onebus](http://onebus.ch/) at the DINAcon stage, which are partly (and very literally, with a LEAP motion controller) hand-made using Processing. With P5.js it is easy to pick up some basic code-art techniques. Commit to a regular practice, and pretty soon you'll be impressing your friends with your code-VJ skilz. Check out our [Open Edu Days workshop](https://db.schoolofdata.ch/event/10), join us for [MountainBytes](https://mountainbytes.ch/), and look f...","hashtag":"","id":53,"image_url":"https://avatars.githubusercontent.com/u/1617169?v=4","is_challenge":false,"logo_color":"","logo_icon":"","longtext":"We are much impressed by the visuals of [onebus](http://onebus.ch/) at the DINAcon stage, which are partly (and very literally, with a LEAP motion controller) hand-made using Processing. With P5.js it is easy to pick up some basic code-art techniques. Commit to a regular practice, and pretty soon you'll be impressing your friends with your code-VJ skilz. Check out our [Open Edu Days workshop](https://db.schoolofdata.ch/event/10), join us for [MountainBytes](https://mountainbytes.ch/), and look forward to a [Graffathon](https://www.echtzeitkultur.org/en/projects/graffathon/) in Bern next year!\r\n\r\nSee also: \r\n\r\nhttps://hacknight.dinacon.ch/project/28\r\n\r\n---\r\n\r\n#### <center>{ hacknight challenges }</center>\r\n\r\n<span title=\"Beginner challenge\" class=\"challenge-badge level-1\"/>\r\n\r\nSketch a few shapes, make a basic animation following a Processing tutorial. Just google it!\r\n\r\n<span title=\"Intermediate challenge\" class=\"challenge-badge level-2\"/>\r\n\r\nLoad some data, add some interaction or even a game mechanic or two.\r\n\r\n<span title=\"Pro challenge\" class=\"challenge-badge level-3\"/>\r\n\r\nLearn what it takes to maintain, and contribute to the p5.js project itself.\r\n","maintainer":"loleg","name":"p5.js","phase":"Find","progress":5,"score":29,"source_url":"https://github.com/hajdebliem/LM_DINAcon","summary":"Empowers artists, designers, students, and anyone to learn to code and express themselves creatively","team":"loleg","updated_at":"2022-11-07T10:16","url":"https://hacknight.dinacon.ch/project/53","webpage_url":"http://p5js.org/"},{"autotext":"# Get Together\n\n[![Build Status](https://travis-ci.org/GetTogetherComm/GetTogether.svg?branch=master)](https://travis-ci.org/GetTogetherComm/GetTogether)\n\nGet Together is an open source event manager for local communities.\n\nTry it free at <https://gettogether.community>\n\n## Goals\n\n- Be feature-competitive with Meetup.com\n- Allow multiple instances to share federated event data\n- Provide sustainable, cost-effective hosting for FOSS communites\n- Be developed and maintained by the communities using it\n\n## Stack\n\nThis project has been built using [Django 2](https://www.djangoproject.com) and [Python 3](https://www.python.org).\n\nFor more details on dependencies, please check [requirements.txt](requirements.txt).\n\n## Getting Started\n\n### Install Git\n\nFirst, make sure you have [Git](https://git-scm.com/downloads) already installed.\n\nIt usually comes pre-installed in Mac and Linux but in Windows you need to run the installer available in the link above.\n\n### Install virtualenv\n\nAlso make sure you have [virtualenv](https://virtualenv.pypa.io/en/latest/installation.html) in your computer by running:\n\n```bash\nvirtualenv --version\n```\n\nIf you get an error, use ```pip``` (included in Python3) with the following command:\n\n```bash\npip install virtualenv\n```\n\n### Configure your local repository\n\nIf you haven't already, fork the project at <https://github.com/GetTogetherComm/GetTogether>\n\nClone your forked repository in your computer (see detailed instructions [here](https://help.github.com/en/articles/cloning-a-repository)).\n\nNavigate to the repository's location using the command line: `cd GetTogether`\n\nAdd <https://github.com/GetTogetherComm/GetTogether.git> to remote following [these instructions](https://help.github.com/en/articles/configuring-a-remote-for-a-fork).\n\n### Configure the virtual environment\n\n- If you have Python3 already configured as the default version for your computer, just run:\n\n```bash\nvirtualenv ./env\n```\n\n- But if your default is Python2, then run:\n\n```bash\nvirtualenv --python=python3 ./env\n```\n\n### Install dependecies and migrate the database\n\n- If you are in Mac or Linux:\n\n```bash\n./env/bin/pip install -r requirements.txt\n./env/bin/python manage.py migrate\n```\n\n- If you are in Windows:\n\n```bash\n./env/Scripts/pip install -r requirements.txt\n./env/Scripts/python manage.py migrate\n```\n\n### Rename the local_settings file\n\nFind the file `local_settings.example` and copy it in `local_settings.py` with the following command:\n\n```bash\ncp local_settings.example local_settings.py\n```\n\n### Create a super user\n\n- If you're in Mac or Linux run:\n\n```bash\n./env/bin/python manage.py createsuperuser\n```\n\n- If you are in Windows:\n\n```bash\nwinpty ./env/Scripts/python manage.py createsuperuser\n```\n\n### Start the server\n\n- If you're in Mac or Linux run:\n\n```bash\n./env/bin/python manage.py runserver\n```\n\n- If you're in Windows:\n\n```bash\nwinpty ./env/Scripts/python manage.py runserver\n```\n\n## Installing pre-commit hooks\n\nPre-commit is a tool that helps us commiting better code. Before writing any code first install the hooks to your repo.\n\n- If you're using Mac or Linux, run:\n\n```bash\n./env/bin/pre-commit install\n```\n\n- If you're in Windows:\n\n```bash\n./env/Scripts/pre-commit install\n```\n\nFrom now on everytime you commit some code this will be checked by our pre-commit hooks.\n\n### Code formatters\n\nWe use the following code formatters:\n\n- [Black](https://black.readthedocs.io/en/stable/)\n- [iSort](https://timothycrosley.github.io/isort/)\n\nThey are included in the requirements.txt so they were installed already when you [installed dependencies](#install-dependecies-and-migrate-the-database).\n\nOn the first commit after installing `pre-commit`, Black and iSort it will create a new environment, which may take a few minutes. This environment will be reused for all subsequent commits.\n\n### Loading City data\n\nIn order to make it easier to create Places and Teams without having to manually\nenter records for Country, SPR (State/Province/Region) and City, you can preload\nthem using data files from <http://download.geonames.org/export/dump/>\n\nThe provided `load_spr` and `load_cities` commands will only load data if the\nparent country (or SPR for cities) exists in the database. This lets you choose\nwhether you want to load every city, only cities for select countries, or only\nfor select SPRs.\n\n#### Countries\n\nDownload the [countryInfo.txt](http://download.geonames.org/export/dump/countryInfo.txt)\nfile from GeoNames, then run:\n\n`./env/bin/python manage.py load_countries countryInfo.txt`\n\n#### SPR\n\nDownload the [admin1CodesASCII.txt](http://download.geonames.org/export/dump/admin1CodesASCII.txt)\nfile from GeoNames, then run:\n\n`./env/bin/python manage.py load_spr admin1CodesASCII.txt`\n\n#### Cities\n\nYou have a few choices for City data files. GeoNames provides data files for\ncities with [more than 15,000](http://download.geonames.org/export/dump/cities15000.zip)\nresidents, cities with [more than 5,000](http://download.geonames.org/export/dump/cities5000.zip)\nresidents, and cities [with more than 1,000](http://download.geonames.org/export/dump/cities1000.zip)\nresidents. The smaller the number, the more cities there will be in the data\nfile (and the longer it will take to import them all).\n\nDownload the file you want from the links above. They will be zip files that you\nmust unzip before using. Then import the cities by running (for your downloaded\nfile):\n\n`./env/bin/python manage.py load_cities cities15000.txt`\n\n### Using docker\n\n```bash\ndocker build -t get_together .\ndocker run -e \"DEBUG_MODE=True\" -e \"SECRET_KEY=xxxxx\" -e \"ALLOWED_HOSTS=localhost,127.0.0.1\" -d --name get_together -p 8000:8000 get_together\ndocker exec -it get_together venv/bin/python manage.py createsuperuser\n```\n\n### Using docker-compose\n\n```bash\ndocker-compose up -d\ndocker-compose exec get_together python3 manage.py createsuperuser\n```\n\nYou can then connect to the container by going to localhost:8000\n\n## Test Federation\n\nYou can import live event data into your \"Searchable\" table with this command:\n\n`./env/bin/python manage.py import https://gettogether.community/searchables/`\n\n## Getting Involved\n\nTo contribute to Get Together, you can file issues here on GitHub, work on\nfeatures you want it to have, or contact us on [Telegram](https://t.me/joinchat/AlruIk5yiQizaJ0YtYehzA) to learn more.\n\nCurrently the project needs:\n\n- Designers\n  - We need a color scheme for the website\n  - We need a logo for the project\n  - We need user stories and mockups for those pages\n- Front-end developers\n  - We need to pick a JS/CSS framework for the front-end\n  - We need to Django page templates\n  - We need to know what APIs are needed for a dynamic front-end\n- QA Engineers\n  - We need Django test cases setup\n  - We need fuzz-testing setup with something like model-mommy\n  - We want testing automated on github pull requests\n- API/Federation experts\n  - We need to decide on using AppStream or rolling our own data/protocol\n  - We need to architect what data will be federated and it's use cases\n  - We need to support authenticated access to APIs for 3rd party apps\n- Devops\n  - We need a way to easily deploy and update GetTogether in production\n  - We need an easy way to get a development environment up and running\n  - We need to find a hosting service for gettogether.community\n\nIf you can help with any of these, please get in touch with me!\n","autotext_url":"https://github.com/GetTogetherComm/GetTogether/","contact_url":"https://github.com/GetTogetherComm/GetTogether/issues","created_at":"2021-10-28T21:20","download_url":"https://github.com/GetTogetherComm/GetTogether/releases","event_name":"HACKnight 2021","event_url":"https://hacknight.dinacon.ch/event/7","excerpt":"For those who miss [techup.ch](https://twitter.com/techupch), the good news is that today we have alternatives! This web-based platform allows to create location-based groups similar to Meetup dot com, and plan events for them.\r\nThe cloud service is free, based on Python/Django open source, allowing you to search based on your location, and is available for individuals and teams to use.\r\nLet's take it for a spin, and use it to help more regularly and easily connect our community.\r\n\r\nAlso, if you...","hashtag":"","id":45,"image_url":"https://avatars.githubusercontent.com/u/35070800?v=4","is_challenge":true,"logo_color":"","logo_icon":"","longtext":"For those who miss [techup.ch](https://twitter.com/techupch), the good news is that today we have alternatives! This web-based platform allows to create location-based groups similar to Meetup dot com, and plan events for them.\r\nThe cloud service is free, based on Python/Django open source, allowing you to search based on your location, and is available for individuals and teams to use.\r\nLet's take it for a spin, and use it to help more regularly and easily connect our community.\r\n\r\nAlso, if you want to look at the techup.ch data and reminisce about the good ol' times, talk to Oleg.\r\n\r\n---\r\n\r\n#### <center>{ hacknight challenges }</center>\r\n\r\n<span title=\"Beginner challenge\" class=\"challenge-badge level-1\"/>\r\n\r\nJoin or set up a meetup on the cloud-hosted version https://gettogether.community/\r\n\r\n<span title=\"Intermediate challenge\" class=\"challenge-badge level-2\"/>\r\n\r\nDownload the open source version and install it locally. Submit a bug or feature request on the issue tracker.\r\n\r\n<span title=\"Pro challenge\" class=\"challenge-badge level-3\"/>\r\n\r\nFix an open issue, contribute some documentation, or otherwise make a patch for the platform.","maintainer":"loleg","name":"GetTogether","phase":"Ask","progress":-1,"score":1,"source_url":"https://github.com/GetTogetherComm/GetTogether","summary":"Event manager for local community events","team":"","updated_at":"2021-10-28T21:20","url":"https://hacknight.dinacon.ch/project/45","webpage_url":"https://gettogether.community"},{"autotext":"<img src=\"https://raw.githubusercontent.com/caos/zitadel/main/./docs/static/logos/zitadel-logo-dark@2x.png\" alt=\"Zitadel Logo\" height=\"100px\" width=\"auto\" />\n\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n[![Release](https://github.com/caos/zitadel/actions/workflows/zitadel.yml/badge.svg)](https://github.com/caos/zitadel/actions)\n[![license](https://badgen.net/github/license/caos/zitadel/)](https://github.com/caos/zitadel/blob/main/LICENSE)\n[![release](https://badgen.net/github/release/caos/zitadel/stable)](https://github.com/caos/zitadel/releases)\n[![Go Report Card](https://goreportcard.com/badge/github.com/caos/zitadel)](https://goreportcard.com/report/github.com/caos/zitadel)\n[![codecov](https://codecov.io/gh/caos/zitadel/branch/main/graph/badge.svg)](https://codecov.io/gh/caos/zitadel)\n\n## What Is ZITADEL\n\n**ZITADEL** is a \"Cloud Native Identity and Access Management\" solution built for the cloud era. ZITADEL uses a modern software stack consisting of [**Golang**](https://golang.org/), [**Angular**](https://angular.io/) and  [**CockroachDB**](https://www.cockroachlabs.com/) as sole storage and follows an event sourced pattern.\n\nWe built **ZITADEL** not only with the vision of becoming a great open source project but also as a superb platform to support developers building their applications, without need to handle secure user login and account management themselves.\n\n## How Does It Work\n\nWe built **ZITADEL** around the idea that the IAM should be easy to deploy and scale. That's why we tried to reduce external systems as much as possible.\nFor example, **ZITADEL** is event sourced but it does not rely on a pub/sub system to function. Instead we built all the functionality right into one binary.\n**ZITADEL** only needs [**Kubernetes**](https://kubernetes.io/) for orchestration and [**CockroachDB**](https://www.cockroachlabs.com/) as storage.\n\n## Features of ZITADEL platform\n\n* Authentication\n  * OpenID Connect 1.0 Protocol (OP)\n  * Username / Password\n  * Machine-to-machine (JWT profile)\n  * Passwordless with FIDO2\n* Multifactor authentication with OTP, U2F\n* Federation with OpenID Connect 1.0 Protocol (RP), OAuth 2.0 Protocol (RP)\n* Authorization via Role Based Access Control (RBAC)\n* Identity Brokering\n* Delegation of roles to other organizations for self-management\n* Strong audit trail for all IAM resources\n* User interface for administration\n* APIs for Management, Administration, and Authentication\n* Policy configuration and enforcement\n* Private Labeling\n\n## Run ZITADEL anywhere\n\n### Self-Managed\n\nYou can run an automatically operated **ZITADEL** instance on a CNCF compliant Kubernetes cluster of your choice:\n\n* [CRD Mode on an existing k8s cluster](https://docs.zitadel.ch/docs/guides/installation/crd)\n* [GitOps Mode on an existing k8s cluster](https://docs.zitadel.ch/docs/guides/installation/gitops)\n* [GitOps Mode on VM/bare-metal](https://docs.zitadel.ch/docs/guides/installation/managed-dedicated-instance)  using [ORBOS](https://docs.zitadel.ch/docs/guides/installation/orbos)\n\n### CAOS-Managed\n\n* **ZITADEL Cloud:** [**ZITADEL.ch**](https://zitadel.ch) is our shared cloud service hosted in Switzerland. [Get started](https://docs.zitadel.ch/docs/guides/basics/get-started) and try the free tier, including already unlimited users and all necessary security features.\n* **ZITADEL Enterprise:** We operate and support a private instance of **ZITADEL** for you. [Get in touch!](https://zitadel.ch/contact/)\n\n## Start using ZITADEL\n\n### Quickstarts\n\nSee our [Documentation](https://docs.zitadel.ch/docs/quickstarts/introduction) to get started with ZITADEL quickly. Let us know, if you are missing a language or framework in the [Q&A](https://github.com/caos/zitadel/discussions/1717).\n\n### Client libraries\n\n* [Go](https://github.com/caos/zitadel-go) client library\n* [.NET](https://github.com/caos/zitadel-net) client library\n* [Dart](https://github.com/caos/zitadel-dart) client library\n\n## Help and Documentation\n\n* [Documentation](https://docs.zitadel.ch)\n* [Ask a question or share ideas](https://github.com/caos/zitadel/discussions)\n* [Say hello](https://zitadel.ch/contact/)\n\n## Showcase\n\n### Passwordless Login\n\nUse our login widget to allow easy and sucure access to your applications and enjoy all the benefits of passwordless (FIDO 2 / WebAuthN):\n\n* works on all modern platforms, devices, and browsers\n* phishing resistant alternative\n* requires only one gesture by the user\n* easy [enrollment](https://docs.zitadel.ch/docs/manuals/user-factors) of the device during registration\n\n![passwordless-windows-hello](https://user-images.githubusercontent.com/1366906/118765435-5d419780-b87b-11eb-95bf-55140119c0d8.gif)\n![passwordless-iphone](https://user-images.githubusercontent.com/1366906/118765439-5fa3f180-b87b-11eb-937b-b4acb7854086.gif)\n\n### Admin Console\n\nUse [Console](https://docs.zitadel.ch/docs/manuals/introduction) or our [APIs](https://docs.zitadel.ch/docs/apis/introduction) to setup organizations, projects and applications.\n\nRegister new applications\n![OIDC-Client-Register](https://user-images.githubusercontent.com/1366906/118765446-62064b80-b87b-11eb-8b24-4f4c365b8c58.gif)\n\nDelegate the right to assign roles to another organization\n![projects_create_org_grant](https://user-images.githubusercontent.com/1366906/118766069-39cb1c80-b87c-11eb-84cf-f5becce4e9b6.gif)\n\nCustomize login and console with your design  \n![private_labeling](https://user-images.githubusercontent.com/1366906/123089110-d148ff80-d426-11eb-9598-32b506f6d4fd.gif)\n\n## How To Contribute\n\nDetails about how to contribute you can find in the [Contribution Guide](CONTRIBUTING.md)\n\n## Security\n\nSee the policy [here](./SECURITY.md)\n\n## Other CAOS Projects\n\n* [**ORBOS**](https://github.com/caos/orbos/) - GitOps everything\n* [**OIDC for GO**](https://github.com/caos/oidc) - OpenID Connect SDK (client and server) for Go\n* [**ZITADEL Tools**](https://github.com/caos/zitadel-tools) - Go tool to convert  key file to privately signed JWT\n\n## Usage Data\n\nZITADEL components send errors and usage data to CAOS Ltd., so that we are able to identify code improvement potential. If you don't want to send this data or don't have an internet connection, pass the global flag `--disable-analytics` when using zitadelctl. For disabling ingestion for already-running components, execute the takeoff command again with the `--disable-analytics` flag.\n\nWe try to distinguishing the environments from which events come from. As environment identifier, we enrich the events by the domain you have configured in zitadel.yml, as soon as it's available. When it's not available and you passed the --gitops flag, we defer the environment identifier from your git repository URL.\n\nBesides from errors that don't clearly come from misconfiguration or cli misuage, we send an inital event when any binary is started. This is a \"<component> invoked\" event along with the flags that are passed to it, except secret values of course.\n\nWe only ingest operational data. Your ZITADEL workload data from the IAM application itself is never sent anywhere unless you chose to integrate other systems yourself.\n## License\n\nSee the exact licensing terms [here](./LICENSE)\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n","autotext_url":"https://github.com/caos/zitadel","contact_url":"https://github.com/caos/zitadel/issues","created_at":"2021-10-29T15:00","download_url":"https://github.com/caos/zitadel/releases","event_name":"HACKnight 2021","event_url":"https://hacknight.dinacon.ch/event/7","excerpt":"Winner of the DINAcon 2021 Newcomer award.\r\n\r\n---\r\n\r\n#### <center>{ hacknight challenges }</center>\r\n\r\n<span title=\"Beginner challenge\" class=\"challenge-badge level-1\"/>\r\n\r\n(a quick challenge for someone to take their first steps as a user...)\r\n\r\n<span title=\"Intermediate challenge\" class=\"challenge-badge level-2\"/>\r\n\r\n(something that one could do once familiar with the project...)\r\n\r\n<span title=\"Pro challenge\" class=\"challenge-badge level-3\"/>\r\n\r\n(a challenge for the coders and pro users in th...","hashtag":"","id":51,"image_url":"https://avatars.githubusercontent.com/u/48989016?v=4","is_challenge":true,"logo_color":"","logo_icon":"","longtext":"Winner of the DINAcon 2021 Newcomer award.\r\n\r\n---\r\n\r\n#### <center>{ hacknight challenges }</center>\r\n\r\n<span title=\"Beginner challenge\" class=\"challenge-badge level-1\"/>\r\n\r\n(a quick challenge for someone to take their first steps as a user...)\r\n\r\n<span title=\"Intermediate challenge\" class=\"challenge-badge level-2\"/>\r\n\r\n(something that one could do once familiar with the project...)\r\n\r\n<span title=\"Pro challenge\" class=\"challenge-badge level-3\"/>\r\n\r\n(a challenge for the coders and pro users in the room...)\r\n","maintainer":"loleg","name":"zitadel \ud83c\udfc6","phase":"Ask","progress":-1,"score":1,"source_url":"https://github.com/caos/zitadel","summary":"Identity Experience Platform","team":"","updated_at":"2021-10-29T15:00","url":"https://hacknight.dinacon.ch/project/51","webpage_url":"https://zitadel.ch"},{"autotext":"# The COMPAS framework\r\n\r\n![build](https://github.com/compas-dev/compas/workflows/build/badge.svg)\r\n[![GitHub - License](https://img.shields.io/github/license/compas-dev/compas.svg)](https://github.com/compas-dev/compas)\r\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/COMPAS.svg)](https://pypi.python.org/project/COMPAS)\r\n[![PyPI - Latest Release](https://img.shields.io/pypi/v/COMPAS.svg)](https://pypi.python.org/project/COMPAS)\r\n[![Conda (channel only)](https://img.shields.io/conda/vn/conda-forge/compas)](https://anaconda.org/conda-forge/compas)\r\n[![Conda - Platform](https://img.shields.io/conda/pn/conda-forge/compas)](https://anaconda.org/conda-forge/compas)\r\n[![DOI](https://zenodo.org/badge/104857648.svg)](https://zenodo.org/badge/latestdoi/104857648)\r\n[![Twitter Follow](https://img.shields.io/twitter/follow/compas_dev?style=social)](https://twitter.com/compas_dev)\r\n\r\nThe **COMPAS** framework is an open-source, Python-based framework for computational research and collaboration in architecture, engineering, digital fabrication and construction.\r\n\r\nThe framework consists of a general-purpose core library, written in pure Python, and a growing collection of extensions that provide easy access to peer-reviewed research, state-of-the-art external libraries such as CGAL, libigl and Triangle, and tools with specialized functionality for AEFC applications such as Abaqus, ANSYS, SOFISTIK, ROS, etc.\r\n\r\nCOMPAS has dedicated packages for working with Rhino, Grasshopper, and Blender, but it can be used in any environment that supports Python scripting. It is available on PyPI and conda-forge and can be easily installed using popular package managers on multiple platforms.\r\n\r\n## Installation\r\n\r\nThe recommended way to install **COMPAS** is to use [Anaconda/conda](https://conda.io/docs/):\r\n\r\n```bash\r\nconda config --add channels conda-forge\r\nconda install COMPAS\r\n```\r\n\r\nFor other installation options, see <https://compas.dev/compas/latest/installation.html>\r\n\r\n## First Steps\r\n\r\n* <https://compas.dev/compas/latest/gettingstarted.html>\r\n* <https://compas.dev/compas/latest/tutorial.html>\r\n* <https://compas.dev/compas/latest/api.html>\r\n\r\n## Questions and feedback\r\n\r\nThe **COMPAS** framework has a forum: <https://forum.compas-framework.org/>\r\nfor questions and discussions.\r\n\r\n## Issue tracker\r\n\r\nIf you find a bug, please help us solve it by [filing a report](https://github.com/compas-dev/compas/issues).\r\n\r\n## Contributing\r\n\r\nIf you want to contribute, check out the [contribution guidelines](https://compas.dev/compas/latest/devguide.html).\r\n\r\n## Changelog\r\n\r\nSee changes between releases on the [changelog](https://compas.dev/compas/latest/changelog.html).\r\n\r\n## License\r\n\r\nThe main library of **COMPAS** is [released under the MIT license](https://compas.dev/compas/latest/license.html).\r\n\r\n## Credits\r\n\r\nCOMPAS is developed by a small team of core developers (`compas-dev`) and with the support of contributers from the open source community.\r\nSee the [list of authors](AUTHORS.md) for a complete overview...\r\n","autotext_url":"https://github.com/compas-dev/compas","contact_url":"https://github.com/compas-dev/compas/issues","created_at":"2021-10-29T13:58","download_url":"https://github.com/compas-dev/compas/releases","event_name":"HACKnight 2021","event_url":"https://hacknight.dinacon.ch/event/7","excerpt":"Presented by Gonzalo during the session on [Open Source Robotic Fabrication](https://dinacon.ch/sessions/2021/open-source-robotic-fabrication-with-compas-fab/)\r\n\r\nhttps://twitter.com/loleg/status/1454081580557799427\r\n\r\nThis is fundamentally a very accessible tool to anyone with a bit of Python experience. It should be quite fun to get this to work [in Blender](https://compas.dev/compas/latest/gettingstarted/blender.html).\r\n\r\nFor a _really_ fun challenge, help Gonzalo and students to make algorit...","hashtag":"","id":47,"image_url":"https://avatars.githubusercontent.com/u/31018118?v=4","is_challenge":true,"logo_color":"","logo_icon":"","longtext":"Presented by Gonzalo during the session on [Open Source Robotic Fabrication](https://dinacon.ch/sessions/2021/open-source-robotic-fabrication-with-compas-fab/)\r\n\r\nhttps://twitter.com/loleg/status/1454081580557799427\r\n\r\nThis is fundamentally a very accessible tool to anyone with a bit of Python experience. It should be quite fun to get this to work [in Blender](https://compas.dev/compas/latest/gettingstarted/blender.html).\r\n\r\nFor a _really_ fun challenge, help Gonzalo and students to make algorithmic light art. Define some fancy paths for his robots-with-lasers. (Details to follow)","maintainer":"gonzalocasas","name":"compas","phase":"Ask","progress":-100,"score":1,"source_url":"https://github.com/compas-dev/compas","summary":"Core packages of the COMPAS framework.","team":"","updated_at":"2021-10-29T21:42","url":"https://hacknight.dinacon.ch/project/47","webpage_url":"https://compas.dev/compas/"},{"autotext":"# Pilot Digitale Transparenz im \u00f6ffentlichen Raum\n\nDaten spielen eine wichtige Rolle in der \u00abSmart City Z\u00fcrich\u00bb. Dank ihnen kann beispielsweise die st\u00e4dtische Infrastruktur gezielt und effizient geplant und unterhalten werden. Mittels Sensoren, welche Fahrradfrequenzen, Luftqualit\u00e4t und anderes messen, werden Daten im \u00f6ffentlichen Raum erhoben.\n\nMit zunehmender Datensammlung steigt die Bedeutung von Transparenz und Rechenschaftspflicht gegen\u00fcber der \u00d6ffentlichkeit. Die Stadt Z\u00fcrich ist diesbez\u00fcglich bereits heute aktiv, indem sie viele Daten als \u00abOpen Data\u00bb ver\u00f6ffentlicht. In diesem Pilotprojekt von Smart City Z\u00fcrich soll getestet werden, wie zus\u00e4tzliche Transparenz geschaffen werden kann.\n\nEine einfache Bildsprache informiert hierbei transparent \u00fcber die Sammlung von Daten im \u00f6ffentlichen Raum und deren Verwendung. Sensoren werden mit Piktogrammen und QR-Codes beschriftet. Letztere leiten auf Websites weiter, welche die gesammelten Daten visualisieren und weitere Informationen bieten. Dazu werden ausschliesslich Daten von bereits vorhandenen Sensoren und offenen, frei zug\u00e4nglichen Beh\u00f6rdendaten (\u00ab[Open Data](https://www.stadt-zuerich.ch/opendata.secure.html)\u00bb) verwendet.\n\n![](https://raw.githubusercontent.com/cividi/TransparenZRH/main/static/signaletik.png)\n\n- [Projektseite](https://transparenzrh.vercel.app)\n  - Beispielsensor [Luftqualit\u00e4t Schimmelstrasse](https://transparenzrh.vercel.app/view/air/Zch_Schimmelstrasse) (`/view/air/Zch_Schimmelstrasse`)\n  - API-Proxy [Luftqualit\u00e4t Schimmelstrasse](https://transparenzrh.vercel.app/api/v1/air/Zch_Schimmelstrasse) (`/api/v1/air/Zch_Schimmelstrasse`)\n- [Python Notebook](https://github.com/Brieden/mixed/blob/main/stick-it-open.ipynb)\n- [D3 Notebook](https://observablehq.com/@n0rdlicht/transparenzrh)\n\n## Vorschau\n\n<img src=\"https://raw.githubusercontent.com/cividi/TransparenZRH/main/static/sensor-view-luftqualitaet.png\" width=\"125px\">\n\n## Developer\n\n### Architecture Proof of Concept\n\n<img src=\"https://raw.githubusercontent.com/cividi/TransparenZRH/main/static/PoC-architecture.svg\" alt=\"PoC tech architecture\" />\n\n- Frontend\n  - SSR via Nuxt.js\n  - TailwindCSS\n- Backend (see `/api`)\n  - Flask based \"serverless\" function\n  - Querying [CKAN DataStore API](https://docs.ckan.org/en/latest/maintaining/datastore.html)\n\nFor testing and deployment add the following environment variables:\n\n- `API_URL`\n\n### Main app run and deploy\n\n```bash\n# clone repository\ngit clone git@github.com:cividi/TransparenZRH.git\n\n# install dependencies\nnpm install\n\n# serve frontend and backend with hot reload at localhost:3000\nexport API_URL=http://localhost:3000/api/v2/\nvercel dev # frontent only: npm run dev\n\n# build for production and launch server\nnpm run build\nnpm run start\n\n# generate static project\nnpm run generate\n```\n\nFor detailed explanation on how things work, check out [Nuxt.js docs](https://nuxtjs.org).\n\n### Aggregated values cache\n\nSome values are pre aggregated and cached in a S3 bucket as publicly readable files. To populate the cache (for production and testing handled via a [GitHub Action](.github/workflows/update-cache.yml) run 5 min past every hour):\n\n```sh\n# Virtual environment and dependencies\npython3 -m venv venv\n. venv/bin/activate\npip install src/requirements.txt\n\n# Set S3 environment variables\nexport AWS_ACCESS_KEY_ID=<YOUR_S3_ACCESS_ID>\nexport AWS_SECRET_ACCESS_LEY=<YOUR_S3_SECRET_ACCESS_LEY>\nexport S3_ENDPOINT_URL=<YOUR_S3_ENDPOINT>\n\n# Run cache updater\npython src/aggregators.py\n```\n\n# LICENSE\n\nTransparenZRH\nCopyright (C) 2021 cividi GmbH\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version. See [LICENSE](LICENSE)\n","autotext_url":"https://github.com/cividi/TransparenZRH","contact_url":"https://github.com/cividi/TransparenZRH/issues","created_at":"2021-10-29T14:39","download_url":"https://github.com/cividi/TransparenZRH/releases","event_name":"HACKnight 2021","event_url":"https://hacknight.dinacon.ch/event/7","excerpt":"Winner of the DINAcon 2021 Open Government Award.\r\n\r\n---\r\n\r\n#### <center>{ hacknight challenges }</center>\r\n\r\n<span title=\"Beginner challenge\" class=\"challenge-badge level-1\"/>\r\n\r\n(a quick challenge for someone to take their first steps as a user...)\r\n\r\n<span title=\"Intermediate challenge\" class=\"challenge-badge level-2\"/>\r\n\r\n(something that one could do once familiar with the project...)\r\n\r\n<span title=\"Pro challenge\" class=\"challenge-badge level-3\"/>\r\n\r\n(a challenge for the coders and pro user...","hashtag":"","id":49,"image_url":"https://avatars.githubusercontent.com/u/50015545?v=4","is_challenge":true,"logo_color":"","logo_icon":"","longtext":"Winner of the DINAcon 2021 Open Government Award.\r\n\r\n---\r\n\r\n#### <center>{ hacknight challenges }</center>\r\n\r\n<span title=\"Beginner challenge\" class=\"challenge-badge level-1\"/>\r\n\r\n(a quick challenge for someone to take their first steps as a user...)\r\n\r\n<span title=\"Intermediate challenge\" class=\"challenge-badge level-2\"/>\r\n\r\n(something that one could do once familiar with the project...)\r\n\r\n<span title=\"Pro challenge\" class=\"challenge-badge level-3\"/>\r\n\r\n(a challenge for the coders and pro users in the room...)\r\n","maintainer":"loleg","name":"TransparenZRH \ud83c\udfc6","phase":"Ask","progress":-1,"score":1,"source_url":"https://github.com/cividi/TransparenZRH","summary":"Smart City Z\u00fcrich. Digitale Transparenz im \u00f6ffentlichen Raum.","team":"","updated_at":"2021-10-29T14:39","url":"https://hacknight.dinacon.ch/project/49","webpage_url":"https://www.stadt-zuerich.ch/prd/de/index/stadtentwicklung/smart-city/transparenz.html"},{"autotext":"# smapshot api\r\n\r\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\r\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\r\n\r\n\r\n- [Project description](#project-description)\r\n- [Initial setup](#initial-setup)\r\n- [Develop with Docker Compose (recommended)](#develop-with-docker-compose-recommended)\r\n    - [Requirements](#requirements)\r\n    - [Setup](#setup)\r\n    - [Run the application](#run-the-application)\r\n    - [Run the automated tests](#run-the-automated-tests)\r\n    - [Useful commands](#useful-commands)\r\n- [Develop locally](#develop-locally)\r\n    - [Setup](#setup-1)\r\n    - [Run the application](#run-the-application-1)\r\n    - [Run the automated tests](#run-the-automated-tests-1)\r\n- [Development guide](#development-guide)\r\n\r\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\r\n\r\n## Project description\r\n\r\nSmapshot is a crowdsourcing platform to geolocalize historical images in 3 dimension.\r\nProduction version is available at https://smapshot.heig-vd.ch\r\n\r\nThis project contains the code of the smapshot API available live at https://smapshot.heig-vd.ch/api/v1/\r\nThe online documentation is available at https://smapshot.heig-vd.ch/api/v1/docs/\r\n\r\n## Initial setup\r\n\r\n* Copy the `.env.sample` file to `.env` and adapt it to your local environment.\r\n\r\n  > If you are developing with Docker Compose, you do not need to configure the\r\n  > database connection, as the database is created and configured for you.\r\n* You can download sample images from [the Switch\r\n  drive](https://drive.switch.ch/index.php/apps/files/?dir=/Smapshot/Sample%20Data&fileid=1891746707).\r\n  Unzip the contents of the `data.zip` file into the `public/data` directory in\r\n  this repository.\r\n* Once you have set up the database in the following sections, if you do not\r\n  have a `super_admin` user account (password `super_admin`), you can add one with:\r\n\r\n  ```sql\r\n  INSERT INTO public.users (first_name, last_name, email, username, date_registr, letter, lang, \"password\", roles, active)\r\n  VALUES ('Franck', 'Dulin', 'super_admin@smapshot.ch', 'super_admin', now(), TRUE, 'fr','$2b$12$v80JamELNdJnvHyVAQrUZOaIRJJ2BI48vTsZop4s5mgoA9jbcX4Ni','{volunteer,super_admin}',TRUE);\r\n  ```\r\n\r\n## Develop with Docker Compose (recommended)\r\n\r\n### Requirements\r\n\r\n* [Docker](https://www.docker.com/) 18.09+.\r\n* [Docker Compose](https://docs.docker.com/compose/) 1.24+.\r\n\r\n### Setup\r\n\r\nCreate and migrate the database:\r\n\r\n```bash\r\nnpm run compose:migrate\r\n```\r\n\r\n### Run the application\r\n\r\nCommand                   | Description\r\n:------------------------ | :------------------------------------------------------------------\r\n`npm run compose`         | Start the application and install dependencies the first time.\r\n`npm run compose:install` | Run `npm install` to install missing/updated dependencies (slower).\r\n\r\nVisit http://localhost:1337 once the application has started.\r\n\r\n### Run the automated tests\r\n\r\nCommand                         | Description\r\n:------------------------------ | :-------------------------------------------------------------------------\r\n`npm run compose:test`          | Run the test suite.\r\n`npm run compose:test:coverage` | Also generate a test coverage report (slower) in the `coverage` directory.\r\n`npm run compose:test:debug`    | Run the test suite with verbose logs to help debug issues.\r\n\r\n### Useful commands\r\n\r\nCommand                                  | Description\r\n:--------------------------------------- | :----------------------------------------------------------------------------------------------------------------\r\n`docker-compose up --build app`          | Run the application in the foreground (this is what `npm run compose` does).\r\n`docker-compose up --build --detach app` | Run the application in the background.\r\n`docker-compose stop`                    | Stop all containers.\r\n`docker-compose down`                    | Stop and remove all containers (but keep the data).\r\n`docker-compose down --volumes`          | Stop and permanently delete all containers and data.\r\n`docker-compose exec app <command>`      | Execute a command inside the running `app` container (e.g. `docker-compose exec app npm install my-new-package`).\r\n`docker-compose ps`                      | List running containers.\r\n\r\n> Running the application with `docker-compose up` will also automatically\r\n> re-generate the API documentation and re-run the linter on code changes.\r\n\r\n## Develop locally\r\n\r\nYou will need:\r\n\r\n* A [PostgreSQL](https://www.postgresql.org) 13+ server with the\r\n  [PostGIS](https://postgis.net) extension.\r\n* [Node.js](https://nodejs.org) 12.x.\r\n* [Python](https://www.python.org) 3+ and the\r\n  [pip](https://pypi.org/project/pip/) package installer.\r\n\r\n### Setup\r\n\r\n* Install Node.js dependencies:\r\n  * Run `npm ci` on a fresh clone.\r\n  * Or, run `npm install` to install new dependencies.\r\n* Intall required Python tools:\r\n\r\n  ```bash\r\n  pip3 install opencv-python numpy scipy pymap3d\r\n  ```\r\n* Install the submodule\r\n  ```\r\n  git submodule update --init --recursive\r\n  ```\r\n* Create an empty database:\r\n\r\n  ```bash\r\n  psql\r\n  > CREATE DATABASE smapshot;\r\n  ```\r\n\r\n* If you are using PostGIS 3+, you must also manually create the postgis and postgis_raster extensions before migrating the database:\r\n\r\n  ```\r\n  \\connect smapshot\r\n  CREATE EXTENSION postgis;\r\n  CREATE EXTENSION postgis_raster;\r\n  ```\r\n\r\n* Migrate the database (assuming you have the correct database configuration in\r\n  your `.env` file):\r\n\r\n  ```bash\r\n  npm run migrate\r\n  ```\r\n\r\n\r\n### Run the application\r\n\r\n* Run `npm start` to start the server once.\r\n* Or, run `npm run dev` to start it with live reload. It will also keep the API\r\n  documentation up to date and lint the code when it changes.\r\n\r\nThen visit http://localhost:1337.\r\n\r\n### Run the automated tests\r\n\r\nCreate a separate test database, called `smapshot-test` by default. You can\r\noverride the test database settings (e.g. `DB_NAME`, `DB_HOST`) in a `.env.test`\r\nfile similar to your `.env` file.\r\n\r\nCommand                 | Description\r\n:---------------------- | :-------------------------------------------------------------------------\r\n`npm test`              | Run the test suite.\r\n`npm run test:coverage` | Also generate a test coverage report (slower) in the `coverage` directory.\r\n`npm run test:debug`    | Run the test suite with verbose logs to help debug issues.\r\n`npm run test:watch`    | Automatically run the tests when code changes.\r\n\r\n## Development guide\r\n\r\nRead [the development guide](./DEVELOPMENT.md) for more information.\r\n","autotext_url":"https://github.com/MediaComem/smapshot-api","contact_url":"https://github.com/MediaComem/smapshot-api/issues","created_at":"2021-10-29T14:30","download_url":"https://github.com/MediaComem/smapshot-api/releases","event_name":"HACKnight 2021","event_url":"https://hacknight.dinacon.ch/event/7","excerpt":"Awarded the 2021 DINAcon Open Data Award.\r\n\r\n---\r\n\r\n#### <center>{ hacknight challenges }</center>\r\n\r\n<span title=\"Beginner challenge\" class=\"challenge-badge level-1\"/>\r\n\r\n(a quick challenge for someone to take their first steps as a user...)\r\n\r\n<span title=\"Intermediate challenge\" class=\"challenge-badge level-2\"/>\r\n\r\n(something that one could do once familiar with the project...)\r\n\r\n<span title=\"Pro challenge\" class=\"challenge-badge level-3\"/>\r\n\r\n(a challenge for the coders and pro users in the...","hashtag":"","id":48,"image_url":"https://avatars.githubusercontent.com/u/20334699?v=4","is_challenge":true,"logo_color":"","logo_icon":"","longtext":"Awarded the 2021 DINAcon Open Data Award.\r\n\r\n---\r\n\r\n#### <center>{ hacknight challenges }</center>\r\n\r\n<span title=\"Beginner challenge\" class=\"challenge-badge level-1\"/>\r\n\r\n(a quick challenge for someone to take their first steps as a user...)\r\n\r\n<span title=\"Intermediate challenge\" class=\"challenge-badge level-2\"/>\r\n\r\n(something that one could do once familiar with the project...)\r\n\r\n<span title=\"Pro challenge\" class=\"challenge-badge level-3\"/>\r\n\r\n(a challenge for the coders and pro users in the room...)\r\n","name":"smapshot \ud83c\udfc6","phase":"Ask","progress":-100,"score":0,"source_url":"https://github.com/MediaComem/smapshot-api","summary":"Crowdsourcing platform for geological data","team":"","updated_at":"2022-11-07T09:40","url":"https://hacknight.dinacon.ch/project/48","webpage_url":""}],"name":"projects"}],"sources":[{"path":"https://dribdat.cc","title":"dribdat"}],"title":"HACKnight 2021","version":"0.2.0"}
